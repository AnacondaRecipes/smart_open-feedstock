{% set name = "smart_open" %}
{% set version = "7.3.0.post1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/piskvorky/{{ name }}/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 09cb7f240d628a532b3b34182f4fb66d9b9c9b27c49fabbf8fe5a43ab7c90bdd

build:
  number: 0
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  skip: True  # [py<38]

requirements:
  host:
    - pip
    - python
    - wheel
    - setuptools >=64
    - setuptools_scm >=8
  run:
    - python
    - wrapt
  run_constrained:
    # gcs
    - google-cloud-storage >=2.6.0

# E   ModuleNotFoundError: No module named 'azure'
{% set ignore_tests = " --ignore=tests/test_azure.py" %}
# E   ModuleNotFoundError: No module named 'google'
{% set ignore_tests = ignore_tests + " --ignore=tests/test_gcs.py" %}
{% set ignore_tests = ignore_tests + " --ignore=tests/test_smart_open.py" %}
# >   raise BadGzipFile('Not a gzipped file (%r)' % magic)
# E   gzip.BadGzipFile: Not a gzipped file (b'48')
{% set deselect_tests = " --deselect=tests/test_s3.py::ReaderTest::test_text_iterator" %}
{% set deselect_tests = deselect_tests + " --deselect=tests/test_s3.py::MultipartWriterTest::test_gzip" %}
{% set deselect_tests = deselect_tests + " --deselect=tests/test_s3.py::MultipartWriterTest::test_buffered_writer" %}
{% set deselect_tests = deselect_tests + " --deselect=tests/test_s3.py::MultipartWriterTest::test_write" %}
{% set deselect_tests = deselect_tests + " --deselect=tests/test_s3.py::MultipartWriterTest::test_buffered_writer" %}
{% set deselect_tests = deselect_tests + " --deselect=tests/test_s3.py::OpenTest::test_read_never_returns_none" %}
# >   self.assertEqual(contents, boto3_body)
# E   AssertionError: b'the spice melange\n' != b'12\r\nthe spice melange\n\r\n0\r\nx-amz-checksum-crc32:OcGXLA==\r\n\r\n'
{% set deselect_tests = deselect_tests + " --deselect=tests/test_s3.py::MultipartWriterTest::test_to_boto3" %}

# On WIN, CI failed due to AttributeError: 'AttrDict' object has no attribute 'cmd'. Skip WIN.
test:  # [not win]
  source_files:  # [not win]
    - tests  # [not win]
  imports:  # [not win]
    - smart_open  # [not win]
  commands:  # [not win]
    - pip check  # [not win]
    - pytest -v tests {{ ignore_tests }} {{ deselect_tests }}  # [not win]
  requires:  # [not win]
    - pip  # [not win]
    - pytest  # [not win]
    - pytest-rerunfailures  # [not win]
    - responses  # [not win]
    - paramiko  # [not win]
    - boto3  # [not win]
    - zstandard  # [not win]
    - moto  # [not win]

about:
  home: https://github.com/RaRe-Technologies/smart_open
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: Utils for streaming large files (S3, HDFS, GCS, SFTP, Azure Blob Storage, gzip, bz2, zst...)
  description: |
    smart_open is a Python 3 library for efficient streaming of very large
    files from/to storages such as S3, GCS, Azure Blob Storage, HDFS, WebHDFS,
    HTTP, HTTPS, SFTP, or local filesystem.  It supports transparent,
    on-the-fly (de-)compression for a variety of different formats
  dev_url: https://github.com/RaRe-Technologies/smart_open
  doc_url: https://github.com/RaRe-Technologies/smart_open/blob/develop/README.rst

extra:
  recipe-maintainers:
    - souravsingh
    - mpenkov
